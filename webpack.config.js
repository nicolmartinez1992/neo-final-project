const path = require('path');
const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const webpackMerge = require('webpack-merge');
const dotenv = require('dotenv');

const aliases = require('./build-utils/aliases');
const presetConfig = require('./build-utils/loadPresets');
const modeConfig = (env) =>
  require(`./build-utils/webpack.${env}`)(env); // eslint-disable-line

module.exports = ({
  mode = 'production',
  presets = ['babel', 'css', 'scss', 'svg'],
}) => {
  const env = dotenv.config().parsed;
  let envKeys = {};
  if (env) {
    envKeys = Object.keys(env).reduce((prev, next) => {
      prev[`process.env.${next}`] = JSON.stringify(env[next]); //eslint-disable-line
      return prev;
    }, {});
  }

  return webpackMerge.merge(
    {
      entry: {
        'src/index.jsx': [path.join(__dirname, './src/index.jsx')],
      },
      mode,
      module: {
        rules: [
          {
            loader: 'file-loader',
            options: {
              name: './src/assets/[name].[ext]',
            },
            test: /\.(jpe?g|png|gif|svg)$/i,
          },
        ],
      },
      output: {
        chunkFilename: '[name].lazy-chunk.js',
        filename: 'bundle.[hash].js',
        path: path.resolve('dist'),
        publicPath: '/',
      },
      plugins: [
        new HtmlWebpackPlugin({
          inject: true, // Inject all files that are generated by webpack
          template: './public/index.html',
        }),
        new webpack.DefinePlugin(envKeys),
        new webpack.ProgressPlugin(),
      ],
      resolve: {
        alias: aliases,
        extensions: ['*', '.js', '.jsx'],
      },
    },
    modeConfig(mode),
    presetConfig({ mode, presets }),
  );
};
